name: Unit Test

on: [push, pull_request]

jobs:
  Build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: bitnami/mysql:8.0
        env:
          MYSQL_ROOT_USER: root
          MYSQL_ROOT_PASSWORD: 123
          MYSQL_DATABASE: indexer
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Compile
        run: ./mvnw -B clean compile install -Dmaven.test.skip=true
      - name: Test
        run: |
          export MAVEN_OPTS='-Dmaven.repo.local=.m2/repository -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:-UseGCOverheadLimit -Xmx2g'
          ./mvnw -B test  -Dmaven.test.skip=false
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./indexer/target/site/jacoco/jacoco.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: false # optional (default = false)
      - name: Run SonarCloud Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          ./mvnw -B verify sonar:sonar
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
          -Dsonar.core.codeCoveragePlugin=jacoco
          -Dmaven.test.skip=true
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.organization=flowerfine
          -Dsonar.projectKey=flowerfine_indexer
      - uses: nick-invision/retry@v1
        with:
          timeout_minutes: 40
          max_attempts: 3
          command: ./mvnw -B -ntp clean install -DskipTests=false -DskipIntegrationTests=false -Dcheckstyle.skip=false -Drat.skip=false -Dmaven.javadoc.skip=true


  Checkstyle:
    name: Check code style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check Code Style
        uses: nikitasavinov/checkstyle-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: 'github-pr-check'
          tool_name: 'testtool'
          checkstyle_config: checkstyle.xml
          workdir: ./
#        env:
#          WORKDIR: ./
#          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          CHECKSTYLE_CONFIG: checkstyle.xml
#          REVIEWDOG_VERSION: latest
#        run: |
#          wget -O - -q https://github.com/checkstyle/checkstyle/releases/download/checkstyle-8.22/checkstyle-8.22-all.jar > /opt/checkstyle.jar
#          wget -O - -q https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /opt ${REVIEWDOG_VERSION}
#          java -jar /opt/checkstyle.jar "${WORKDIR}" -c "${CHECKSTYLE_CONFIG}"  -f xml \
#               | /opt/reviewdog -f=checkstyle \
#                    -reporter="${INPUT_REPORTER:-github-pr-check}" \
#                    -filter-mode="${INPUT_FILTER_MODE:-added}" \
#                    -fail-on-error="${INPUT_FAIL_ON_ERROR:-false}"